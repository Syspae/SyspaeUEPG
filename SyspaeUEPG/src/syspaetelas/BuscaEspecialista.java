/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package syspaetelas;
import controleConexao.Conexao;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import syspaetelas.*;
/**
 *
 * @author carlo
 */
public class BuscaEspecialista extends javax.swing.JFrame {

    /**
     * Creates new form TelaBuscaAluno
     */
    public BuscaEspecialista() {
        initComponents();
        this.setVisible(true);
        setLocationRelativeTo(null);       
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // Função para buscar profissionais cadastrados baseado no combobox de busca
    private String preparaSQL(){
        switch (cmbbxBusca.getSelectedItem().toString()) {
            case "Nome":
                return """
                       SELECT crm, profissional.nome, nome_especialidade
                       from profissional as profissional
                       inner join especialidade as especialidade
                       on especialidade.idespecialidade = profissional.fk_especialidade_idespecialidade
                       where profissional.nome like '"""+txtfldBusca.getText()+"%' order by profissional.nome";
            case "Especialidade":
                return """
                       SELECT crm, profissional.nome, nome_especialidade
                       from profissional as profissional
                       inner join especialidade as especialidade
                       on especialidade.idespecialidade = profissional.fk_especialidade_idespecialidade
                       where crm like '"""+txtfldBusca.getText()+"%' order by profissional.nome";
            case "Carteira do Conselho":
                return """
                       SELECT crm, profissional.nome, nome_especialidade
                       from profissional as profissional
                       inner join especialidade as especialidade
                       on especialidade.idespecialidade = profissional.fk_especialidade_idespecialidade
                       where especialidade.nome like '"""+txtfldBusca.getText()+"%' order by profissional.nome";
            default:
                throw new AssertionError();
        }
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblBusca = new javax.swing.JLabel();
        cmbbxBusca = new javax.swing.JComboBox<>();
        txtfldBusca = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSelecionar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblBuscaEspecialista = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setTitle("Buscar Aluno");
        setResizable(false);

        lblBusca.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblBusca.setText("Buscar por:");

        cmbbxBusca.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmbbxBusca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome", "Especialidade", "Carteira do Conselho" }));
        cmbbxBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbbxBuscaActionPerformed(evt);
            }
        });

        txtfldBusca.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtfldBusca.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtfldBuscaInputMethodTextChanged(evt);
            }
        });
        txtfldBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldBuscaActionPerformed(evt);
            }
        });
        txtfldBusca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfldBuscaKeyTyped(evt);
            }
        });

        btnBuscar.setBackground(new java.awt.Color(242, 242, 242));
        btnBuscar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botão Buscar.png"))); // NOI18N
        btnBuscar.setBorder(null);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(242, 242, 242));
        btnCancelar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botão Cancelar.png"))); // NOI18N
        btnCancelar.setBorder(null);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSelecionar.setBackground(new java.awt.Color(242, 242, 242));
        btnSelecionar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnSelecionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botão Selecionar (1).png"))); // NOI18N
        btnSelecionar.setBorder(null);
        btnSelecionar.setMinimumSize(new java.awt.Dimension(188, 61));
        btnSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarActionPerformed(evt);
            }
        });

        tblBuscaEspecialista.setAutoCreateRowSorter(true);
        tblBuscaEspecialista.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblBuscaEspecialista.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tblBuscaEspecialista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Carteira do Conselho", "Nome", "Especialidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBuscaEspecialista.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane3.setViewportView(tblBuscaEspecialista);
        if (tblBuscaEspecialista.getColumnModel().getColumnCount() > 0) {
            tblBuscaEspecialista.getColumnModel().getColumn(0).setMinWidth(200);
            tblBuscaEspecialista.getColumnModel().getColumn(0).setPreferredWidth(200);
            tblBuscaEspecialista.getColumnModel().getColumn(1).setPreferredWidth(400);
            tblBuscaEspecialista.getColumnModel().getColumn(2).setMinWidth(300);
            tblBuscaEspecialista.getColumnModel().getColumn(2).setPreferredWidth(300);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(lblBusca)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbbxBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtfldBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscar)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 901, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblBusca)
                        .addComponent(cmbbxBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtfldBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelar)
                    .addComponent(btnSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // Botão para fechar a janela
        BuscaEspecialista.this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarActionPerformed
        // Botão para abrir a tela de edição do profissional selecionado    
        EditarEspecialista editar = new EditarEspecialista(tblBuscaEspecialista.getModel().getValueAt(tblBuscaEspecialista.getSelectedRow(), 0)+"");
        this.dispose();
    }//GEN-LAST:event_btnSelecionarActionPerformed

    private void txtfldBuscaInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtfldBuscaInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldBuscaInputMethodTextChanged

    private void txtfldBuscaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfldBuscaKeyTyped
        // Função para busca dinamica para 3 ou mais caracteres
        if(txtfldBusca.getText().length() >= 2){
                    DefaultTableModel table = (DefaultTableModel) tblBuscaEspecialista.getModel();
                    table.setRowCount(0);
                    Conexao con = new Conexao();
                    ResultSet rs = con.executaBusca(preparaSQL());
                    try {
                        while(rs.next()){
                            Object[] row = new Object [3];
                            for(int i = 1; i <= 3; i++){
                                row[i-1] = rs.getObject(i);
                            }
                            ((DefaultTableModel) tblBuscaEspecialista.getModel()).insertRow(rs.getRow()-1, row);
                        }
                    } catch (Exception e) {
                    }
                }
    }//GEN-LAST:event_txtfldBuscaKeyTyped

    private void cmbbxBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbbxBuscaActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbbxBuscaActionPerformed

    private void txtfldBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldBuscaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldBuscaActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // Botão para busca para 3 ou mais caracteres
        if(txtfldBusca.getText().length() >= 3){
            DefaultTableModel table = (DefaultTableModel) tblBuscaEspecialista.getModel();
            table.setRowCount(0);
            Conexao con = new Conexao();
            ResultSet rs = con.executaBusca(preparaSQL());
            try {
                while(rs.next()){
                    Object[] row = new Object [3];
                    for(int i = 1; i <= 3; i++){
                        row[i-1] = rs.getObject(i);
                    }
                    ((DefaultTableModel) tblBuscaEspecialista.getModel()).insertRow(rs.getRow()-1, row);
                }
            } catch (Exception e) {
            }
        }
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSelecionar;
    private javax.swing.JComboBox<String> cmbbxBusca;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblBusca;
    private javax.swing.JTable tblBuscaEspecialista;
    private javax.swing.JTextField txtfldBusca;
    // End of variables declaration//GEN-END:variables
}
